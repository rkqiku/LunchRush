services:
  # Redis for state store and pub/sub
  redis:
    image: redis:7-alpine
    container_name: lunchrush-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - lunchrush

  # The Go microservice
  lunchservice:
    build:
      context: ./microservice
      dockerfile: Dockerfile
    container_name: lunchrush-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "${DAPR_HTTP_PORT:-3500}:3500"
      - "${DAPR_GRPC_PORT:-50001}:50001"
    environment:
      - DAPR_HTTP_PORT=${DAPR_HTTP_PORT:-3500}
      - DAPR_GRPC_PORT=${DAPR_GRPC_PORT:-50001}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - lunchrush
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Dapr sidecar for the microservice
  lunchservice-dapr:
    image: "daprio/daprd:1.15.1"
    container_name: lunchrush-dapr
    restart: unless-stopped
    command: [
      "./daprd",
      "-app-id", "lunchservice",
      "-app-port", "8080",
      "-dapr-http-port", "${DAPR_HTTP_PORT:-3500}",
      "-dapr-grpc-port", "${DAPR_GRPC_PORT:-50001}",
      "-components-path", "/components",
      "-config", "/configuration/config.yaml",
      "-log-level", "info"
    ]
    volumes:
      - ./microservice/config:/components:ro
      - ./microservice/config:/configuration:ro
    depends_on:
      - redis
      - lunchservice
    network_mode: "service:lunchservice"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend React app
  frontend:
    build:
      context: ./plugin
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:8080}
        - NODE_ENV=${NODE_ENV:-production}
    container_name: lunchrush-frontend
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8080}
      - REACT_APP_ENVIRONMENT=${REACT_APP_ENVIRONMENT:-production}
      - REACT_APP_VERSION=${REACT_APP_VERSION:-1.0.0}
      - REACT_APP_ENABLE_VOTING=${REACT_APP_ENABLE_VOTING:-true}
      - REACT_APP_ENABLE_NOTIFICATIONS=${REACT_APP_ENABLE_NOTIFICATIONS:-true}
      - NGINX_PORT=80
      - NGINX_HOST=localhost
      - API_PROXY_URL=http://lunchservice:8080
    depends_on:
      lunchservice:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - lunchrush
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:
    driver: local

networks:
  lunchrush:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16